{"version":3,"sources":["simple-comment-editing.js"],"names":["__","wp","i18n","_n","jQuery","document","ready","$","fn","simplecommentediting","each","sce_delete_comment","ajax_params","cid","element","siblings","off","remove","action","comment_id","post_id","pid","nonce","_wpnonce","response","errors","alert","parent","on","post","removeClass","addClass","html","show","slideUp","setTimeout","find","attr","sce","$this","unserialize","ajax_url","e","preventDefault","css","fadeOut","prop","focus","val","textareas","simple_comment_editing","allow_delete_confirmation","confirm","fadeIn","trim","textarea_val","console","log","allow_delete","comment_to_save","triggerHandler","ajax_save_params","comment_content","hooks","applyFilters","error","comment_text","_ajax_nonce","minutes","parseInt","seconds","timer_text","get_timer_text","can_edit","trigger","timers","time","timer","timer_minutes","timer_seconds","timer_obj","diff","Date","getTime","start","window","text","callback","date","expires","set_comment_cookie","toGMTString","cookie","Array","SCE_comment_scroll","event","comment","parse_comment","replaceWith","location","pattern","test","hash","offset","top","targetOffset","SCE_comments_updated","comment_url","match"],"mappings":"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","file":"simple-comment-editing.min.js","sourcesContent":["var __ = wp.i18n.__;\nvar _n = wp.i18n._n;\n\njQuery( document ).ready( function( $ ) {\n\tvar sce = $.simplecommentediting = $.fn.simplecommentediting = function() {\n\t\tvar $this = this;\n\t\treturn this.each( function() {\n\t\t\tvar ajax_url = $( this ).find( 'a:first' ).attr( 'href' );\n\t\t\tvar ajax_params = wpAjax.unserialize( ajax_url );\n\t\t\tvar element = this;\n\n\t\t\t//Set up event for when the edit button is clicked\n\t\t\t$( element ).on( 'click', 'a', function( e ) { \n\t\t\t\te.preventDefault();\n\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status' ).css( 'display', 'none' );\n\t\t\t\t//Hide the edit button and show the textarea\n\t\t\t\t$( element ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'button' ).prop( 'disabled', false );\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeIn( 'fast', function() {\n\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'textarea:first' ).focus();\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\t//Cancel button\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-cancel', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\t\n\t\t\t\t//Hide the textarea and show the edit button\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).fadeIn( 'fast' );\n\t\t\t\t\t$( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val( sce.textareas[ ajax_params.cid  ] );\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\tfunction sce_delete_comment( element, ajax_params ) {\n                $( element ).siblings( '.sce-textarea' ).off();\t\n\t\t\t\t$( element ).off();\n\t\t\t\t\t\n\t\t\t\t//Remove elements\n\t\t\t\t$( element ).parent().remove();\n\t\t\t\t$.post( ajax_url, { action: 'sce_delete_comment', comment_id: ajax_params.cid, post_id: ajax_params.pid, nonce: ajax_params._wpnonce }, function( response ) {\n\t\t\t\t\t\tif ( response.errors ) {\n\t\t\t\t\t\t\talert( __( 'Your comment could not be deleted', 'simple-comment-editing' ) );\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).on();\t\n\t\t\t\t\t\t\t$( element ).on();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status updated' ).html( __( 'Your comment has been removed.', 'simple-comment-editing' ) ).show();\n\t\t\t\t\t\t\tsetTimeout( function() { $( \"#comment-\" + ajax_params.cid ).slideUp(); }, 3000 ); //Attempt to remove the comment from the theme interface\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t}, 'json' );\n            };\n\t\t\t\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-delete', function( e ) {\n    \t\t\te.preventDefault();\n    \t\t\t\n    \t\t\tif ( simple_comment_editing.allow_delete_confirmation ) {\n\t    \t\t\tif( confirm( __( 'Do you want to delete this comment?', 'simple-comment-editing' ) ) ) {\n\t\t    \t\t\tsce_delete_comment( element, ajax_params );\n\t    \t\t\t}\n    \t\t\t} else {\n\t    \t\t\tsce_delete_comment( element, ajax_params );\n    \t\t\t}\n    \t\t\t\n            } );\n\t\t\t\n\t\t\t//Save button\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-save', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\t\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'button' ).prop( 'disabled', true );\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeIn( 'fast' );\n\t\t\t\t\t\n\t\t\t\t\t//Save the comment\n\t\t\t\t\tvar textarea_val = $( element ).siblings( '.sce-textarea' ).find( 'textarea' ).val();\n\t\t\t\t\tvar comment_to_save = $.trim( textarea_val );\n\t\t\t\t\tif ( textarea_val == 'I am God' && typeof( console ) == 'object' ) {\n\t\t\t\t\t\tconsole.log( \"Isn't God perfect?  Why the need to edit?\" );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//If the comment is blank, see if the user wants to delete their comment\n\t\t\t\t\tif ( comment_to_save == '' && simple_comment_editing.allow_delete == true  ) {\n\t\t\t\t\t\tif ( confirm( __( 'Do you want to delete this comment?', 'simple-comment-editing' ) ) ) {\n    \t\t\t\t\t\tsce_delete_comment( element, ajax_params );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val( sce.textareas[ ajax_params.cid  ] ); //revert value\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeOut( 'fast', function() {\n\t\t\t\t\t\t\t\t$( element ).fadeIn( 'fast' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t* Event: sce.comment.save.pre\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered before a comment is saved\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param int $comment_id The Comment ID\n\t\t\t\t\t* @param int $post_id The Post ID\n\t\t\t\t\t*/\n\t\t\t\t\tjQuery( 'body' ).triggerHandler( 'sce.comment.save.pre', [ ajax_params.cid, ajax_params.pid ] );\n\t\t\t\t\tvar ajax_save_params = {\n\t\t\t\t\t\taction: 'sce_save_comment',\n\t\t\t\t\t\tcomment_content: comment_to_save, \n\t\t\t\t\t\tcomment_id: ajax_params.cid, \n\t\t\t\t\t\tpost_id: ajax_params.pid, \n\t\t\t\t\t\tnonce: ajax_params._wpnonce\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t* JSFilter: sce.comment.save.data\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered before a comment is saved\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param object $ajax_save_params\n\t\t\t\t\t*/\n\t\t\t\t\tajax_save_params = wp.hooks.applyFilters( 'sce.comment.save.data', ajax_save_params );\n\t\t\t\t\t\n\t\t\t\t\t$.post( ajax_url, ajax_save_params, function( response ) {\n\t\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeOut( 'fast', function() {\n\t\t\t\t\t\t\t$( element ).fadeIn( 'fast', function() {\n\t\t\t\t\t\t\t\tif ( !response.errors ) {\n\t\t\t\t\t\t\t\t\t$( '#sce-comment' + ajax_params.cid ).html( response.comment_text ); //Update comment HTML\n\t\t\t\t\t\t\t\t\tsce.textareas[ ajax_params.cid  ] = $( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val(); //Update textarea placeholder\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t* Event: sce.comment.save\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* Event triggered after a comment is saved\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* @param int $comment_id The Comment ID\n\t\t\t\t\t\t\t\t\t* @param int $post_id The Post ID\n\t\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\t\tjQuery( 'body' ).triggerHandler( 'sce.comment.save', [ ajax_params.cid, ajax_params.pid ] );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//Output error, maybe kill interface\n\t\t\t\t\t\t\t\t\tif ( response.remove == true ) {\n\t\t\t\t\t\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\t\n\t\t\t\t\t\t\t\t\t\t$( element ).off();\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t//Remove elements\n\t\t\t\t\t\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status error' ).html( response.error ).show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\t\n\t\t\t\t\t}, 'json' );\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\t\t\t\n\t\t\t//Load timers\n\t\t\t/*\n\t\t\t1.  Use Ajax to get the amount of time left to edit the comment.\n\t\t\t2.  Display the result\n\t\t\t3.  Set Interval\n\t\t\t*/\n\t\t\t$.post( ajax_url, { action: 'sce_get_time_left', comment_id: ajax_params.cid, post_id: ajax_params.pid, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\t//Set initial timer text\n\t\t\t\tvar minutes = parseInt( response.minutes );\n\t\t\t\tvar seconds = parseInt( response.seconds );\n\t\t\t\tvar timer_text = sce.get_timer_text( minutes, seconds );\n\t\t\t\t\n\t\t\t\t//Determine via JS if a user can edit a comment - Note that if someone were to finnagle with this, there is still a server side check when saving the comment\n\t\t\t\tvar can_edit = response.can_edit;\n\t\t\t\tif ( !can_edit ) {\n\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\t\n\t\t\t\t\t$( element ).off();\n\t\t\t\t\t\t\n\t\t\t\t\t//Remove elements\n\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Update the timer and show the editing interface\n\t\t\t\t$( element ).find( '.sce-timer' ).html( timer_text );\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( '.sce-timer' ).html( timer_text );\n\t\t\t\t$( element ).show( 400, function() {\n\t\t\t\t\t/**\n\t\t\t\t\t* Event: sce.timer.loaded\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered after a commen's timer has been loaded\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.3.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param jQuery Element of the comment\n\t\t\t\t\t*/\n\t\t\t\t\t$( element ).trigger( 'sce.timer.loaded', element );\n\t\t\t\t} );\n\t\t\t\t\n\t\t\t\t//Save state in textarea\n\t\t\t\tsce.textareas[ response.comment_id ] = $( '#sce-edit-comment' + response.comment_id + ' textarea' ).val();\n\t\t\t\t\n\t\t\t\t//Set interval\n\t\t\t\tsce.timers[ response.comment_id ] = {\n\t\t\t\t\tminutes: minutes,\n\t\t\t\t\tseconds: seconds,\n\t\t\t\t\tstart: new Date().getTime(),\n\t\t\t\t\ttime: 0,\n\t\t\t\t\ttimer: function() {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar timer_seconds = sce.timers[ response.comment_id ].seconds - 1;\n\t\t\t\t\t\tvar timer_minutes = sce.timers[ response.comment_id ].minutes;\n\t\t\t\t\t\tif ( timer_minutes <=0 && timer_seconds <= 0) { \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\t\n\t\t\t\t\t\t\t$( element ).off();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//Remove elements\n\t\t\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ( timer_seconds < 0 ) { \n\t\t\t\t\t\t\t\ttimer_minutes -= 1; timer_seconds = 59;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar timer_text = sce.get_timer_text( timer_minutes, timer_seconds );\n\t\t\t\t\t\t\t$( element ).find( '.sce-timer' ).html(  timer_text );\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( '.sce-timer' ).html( timer_text );\n\t\t\t\t\t\t\tsce.timers[ response.comment_id ].seconds = timer_seconds;\n\t\t\t\t\t\t\tsce.timers[ response.comment_id ].minutes = timer_minutes;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//Get accurate time\n\t\t\t\t\t\tvar timer_obj = sce.timers[ response.comment_id ];\n\t\t\t\t\t\ttimer_obj.time += 1000;\n\t\t\t\t\t\tvar diff = ( new Date().getTime() - timer_obj.start ) - timer_obj.time;\n\t\t\t\t\t\twindow.setTimeout( timer_obj.timer, ( 1000 - diff ) );\n\t\t\t\t\t} \n\t\t\t\t};\n\t\t\t\twindow.setTimeout( sce.timers[ response.comment_id ].timer, 1000 );\n\t\t\t\t\n\t\t\t\t\n\t\t\t}, 'json' );\n\t\t} );\n\t};\n\tsce.get_timer_text = function( minutes, seconds ) {\n\t\tif (seconds < 0) { minutes -= 1; seconds = 59; }\n\t\t//Create timer text\n\t\tvar text = '';\n\t\tif (minutes >= 1) {\n\t\t\ttext += minutes + \" \" + _n('minute', 'minutes', minutes, 'simple-comment-editing');\n\t\t\tif ( seconds > 0 ) { \n\t\t\t\ttext += \" \" + __('and', 'simple-comment-editing') + \" \"; \n\t\t\t}\n\t\t}\n\t\tif (seconds > 0) {\n\t\t\ttext += seconds + \" \" + _n('second', 'seconds', seconds, 'simple-comment-editing'); \n\t\t}\n\t\t/**\n\t\t* JSFilter: sce.comment.timer.text\n\t\t*\n\t\t* Filter triggered before a timer is returned\n\t\t*\n\t\t* @since 1.4.0\n\t\t*\n\t\t* @param object $ajax_save_params\n\t\t*/\n\t\ttext = wp.hooks.applyFilters( 'sce.comment.timer.text', text,  _n('Minute', 'Minutes', minutes, 'simple-comment-editing'), _n('Second', 'Seconds', seconds, 'simple-comment-editing') );\n\t\treturn text;\n\t};\n\tsce.set_comment_cookie = function( pid, cid, callback ) {\n\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_get_cookie_var', post_id: pid, comment_id: cid, _ajax_nonce: simple_comment_editing.nonce\t }, function( response ) {\n\t\t\tvar date = new Date( response.expires );\n\t\t\tdate = date.toGMTString();\n\t\t\tdocument.cookie = response.name+\"=\"+response.value+ \"; expires=\" + date+\"; path=\" + response.path;\n\t\t\t\t\n\t\t\tif ( typeof callback == \"function\" ) {\n\t\t\t\tcallback( cid );\t\n\t\t\t}\n\t\t\t\n\t\t}, 'json' );\n\t};\n\t\n\tsce.timers = new Array();\n\tsce.textareas = new Array();\n\t$( '.sce-edit-button' ).simplecommentediting();\n\t\n\t$( '.sce-edit-button' ).on( 'sce.timer.loaded', SCE_comment_scroll );\n\t\n\t//Third-party plugin compatibility\n\t$( 'body' ).on( 'comment.posted', function( event, post_id, comment_id ) {\n\t\tsce.set_comment_cookie( post_id, comment_id, function( comment_id ) {\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t* Event: sce.comment.loaded\n\t\t\t\t*\n\t\t\t\t* Event triggered after SCE has loaded a comment.\n\t\t\t\t*\n\t\t\t\t* @since 1.3.0\n\t\t\t\t*\n\t\t\t\t* @param object Comment Object\n\t\t\t\t*/\n\t\t\t\t$( 'body' ).trigger( 'sce.comment.loaded', [ response ] );\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\tOnce you capture the sce.comment.loaded event, you can replace the comment and enable SCE\n\t\t\t\t$( '#comment-' + comment_id ).replaceWith( comment_html );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t}, 'json' );\t\n\t\t} );\n\t} );\n\t\n\t//EPOCH Compability\n\t$( 'body' ).on( 'epoch.comment.posted', function( event, pid, cid ) {\n    \tif ( typeof pid == 'undefined' ) {\n\t    \treturn;\n    \t}\n\t\t//Ajax call to set SCE cookie\n\t\tsce.set_comment_cookie( pid, cid, function( comment_id ) {\n\t\t\t//Ajax call to get new comment and load it\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_epoch_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\tcomment = Epoch.parse_comment( response );\n\t\t\t\t$( '#comment-' + comment_id ).replaceWith( comment );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t}, 'json' );\t\n\t\t} );\n\t} );\n\t$( 'body' ).on( 'epoch.comments.loaded, epoch.two.comments.loaded', function( e ) {\n\t\tsetTimeout( function() {\n\t\t\t$( '.sce-edit-button' ).simplecommentediting();\n\t\t}, 1000 );\n\t} );\n\t$( 'body' ).on( 'epoch.two.comment.posted', function( event ) {\n    \t//Ajax call to set SCE cookie\n    \tcomment_id = event.comment_id;\n\t\tsce.set_comment_cookie( event.post, comment_id, function( comment_id ) {\n\t\t\t//Ajax call to get new comment and load it\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_epoch2_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\t$( '#comment-' + comment_id ).find( 'p' ).parent().html( response );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t} );\t\n\t\t} );\n\t} );\n} );\n\nfunction SCE_comment_scroll( e, element ) {\n\tvar location = \"\" + window.location;\n\tvar pattern = /(#[^-]*\\-[^&]*)/;\n\tif ( pattern.test( location ) ) {\n\t\tlocation = jQuery( \"\" + window.location.hash );\n\t\tif ( location.length > 0 ) {\n\t\t\tvar targetOffset = location.offset().top;\n\t\t\tjQuery( 'html,body' ).animate( {scrollTop: targetOffset}, 1 );\n\t\t}\n\t}\t\n}\n//Callback when comments have been updated (for wp-ajaxify-comments compatibility) - http://wordpress.org/plugins/wp-ajaxify-comments/faq/\nfunction SCE_comments_updated( comment_url ) {\n\tvar match = comment_url.match(/#comment-(\\d+)/)\n\tif ( !match ) {\n\t\treturn;\n\t}\n\tcomment_id = match[ 1 ];\n\tjQuery( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\n};"]}