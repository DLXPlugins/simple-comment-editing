{"version":3,"sources":["simple-comment-editing.js"],"names":["__","wp","i8nn","_n","i18n","jQuery","document","ready","$","sce","simplecommentediting","fn","$this","each","sce_delete_comment","element","ajax_params","siblings","off","e","preventDefault","remove","post","ajax_url","action","comment_id","cid","post_id","pid","nonce","_wpnonce","response","errors","fadeIn","on","removeClass","addClass","html","show","setTimeout","slideUp","find","attr","wpAjax","unserialize","css","fadeOut","prop","focus","val","textareas","parent","alert","allow_delete_confirmation","simple_comment_editing","textarea_val","console","log","allow_delete","confirm","triggerHandler","ajax_save_params","comment_content","comment_to_save","applyFilters","error","comment_text","_ajax_nonce","minutes","parseInt","seconds","timer_text","get_timer_text","can_edit","trigger","timers","start","Date","getTime","time","timer","timer_seconds","timer_minutes","timer_obj","diff","window","text","hooks","set_comment_cookie","callback","date","expires","toGMTString","cookie","name","value","path","event","comment","Epoch","parse_comment","replaceWith","pattern","location","length","targetOffset","offset","top","animate","scrollTop","match","test"],"mappings":"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","file":"simple-comment-editing.min.js","sourcesContent":["var __ = wp.i8nn.__;\nvar _n = wp.i18n._n;\n\njQuery( document ).ready( function( $ ) {\n\tsce = $.simplecommentediting = $.fn.simplecommentediting = function() {\n\t\tvar $this = this;\n\t\treturn this.each( function() {\n\t\t\tvar ajax_url = $( this ).find( 'a:first' ).attr( 'href' );\n\t\t\tvar ajax_params = wpAjax.unserialize( ajax_url );\n\t\t\tvar element = this;\n\n\t\t\t//Set up event for when the edit button is clicked\n\t\t\t$( element ).on( 'click', 'a', function( e ) { \n\t\t\t\te.preventDefault();\n\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status' ).css( 'display', 'none' );\n\t\t\t\t//Hide the edit button and show the textarea\n\t\t\t\t$( element ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'button' ).prop( 'disabled', false );\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeIn( 'fast', function() {\n\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'textarea:first' ).focus();\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\t//Cancel button\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-cancel', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\t\n\t\t\t\t//Hide the textarea and show the edit button\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).fadeIn( 'fast' );\n\t\t\t\t\t$( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val( sce.textareas[ ajax_params.cid  ] );\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\tfunction sce_delete_comment( element, ajax_params ) {\n                $( element ).siblings( '.sce-textarea' ).off();\t\n\t\t\t\t$( element ).off();\n\t\t\t\t\t\n\t\t\t\t//Remove elements\n\t\t\t\t$( element ).parent().remove();\n\t\t\t\t$.post( ajax_url, { action: 'sce_delete_comment', comment_id: ajax_params.cid, post_id: ajax_params.pid, nonce: ajax_params._wpnonce }, function( response ) {\n\t\t\t\t\t\tif ( response.errors ) {\n\t\t\t\t\t\t\talert( __( 'Your comment could not be deleted', 'simple-comment-editing' ) );\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).on();\t\n\t\t\t\t\t\t\t$( element ).on();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status updated' ).html( __( 'Your comment has been removed.', 'simple-comment-editing' ) ).show();\n\t\t\t\t\t\t\tsetTimeout( function() { $( \"#comment-\" + ajax_params.cid ).slideUp(); }, 3000 ); //Attempt to remove the comment from the theme interface\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t}, 'json' );\n            };\n\t\t\t\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-delete', function( e ) {\n    \t\t\te.preventDefault();\n    \t\t\t\n    \t\t\tif ( simple_comment_editing.allow_delete_confirmation ) {\n\t    \t\t\tif( confirm( __( 'Do you want to delete this comment?', 'simple-comment-editing' ) ) ) {\n\t\t    \t\t\tsce_delete_comment( element, ajax_params );\n\t    \t\t\t}\n    \t\t\t} else {\n\t    \t\t\tsce_delete_comment( element, ajax_params );\n    \t\t\t}\n    \t\t\t\n            } );\n\t\t\t\n\t\t\t//Save button\n\t\t\t$( element ).siblings( '.sce-textarea' ).on( 'click', '.sce-comment-save', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\t\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( 'button' ).prop( 'disabled', true );\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).fadeOut( 'fast', function() {\n\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeIn( 'fast' );\n\t\t\t\t\t\n\t\t\t\t\t//Save the comment\n\t\t\t\t\tvar textarea_val = $( element ).siblings( '.sce-textarea' ).find( 'textarea' ).val();\n\t\t\t\t\tvar comment_to_save = $.trim( textarea_val );\n\t\t\t\t\tif ( textarea_val == 'I am God' && typeof( console ) == 'object' ) {\n\t\t\t\t\t\tconsole.log( \"Isn't God perfect?  Why the need to edit?\" );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//If the comment is blank, see if the user wants to delete their comment\n\t\t\t\t\tif ( comment_to_save == '' && simple_comment_editing.allow_delete == true  ) {\n\t\t\t\t\t\tif ( confirm( __( 'Do you want to delete this comment?', 'simple-comment-editing' ) ) ) {\n    \t\t\t\t\t\tsce_delete_comment( element, ajax_params );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val( sce.textareas[ ajax_params.cid  ] ); //revert value\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeOut( 'fast', function() {\n\t\t\t\t\t\t\t\t$( element ).fadeIn( 'fast' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t* Event: sce.comment.save.pre\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered before a comment is saved\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param int $comment_id The Comment ID\n\t\t\t\t\t* @param int $post_id The Post ID\n\t\t\t\t\t*/\n\t\t\t\t\tjQuery( 'body' ).triggerHandler( 'sce.comment.save.pre', [ ajax_params.cid, ajax_params.pid ] );\n\t\t\t\t\tvar ajax_save_params = {\n\t\t\t\t\t\taction: 'sce_save_comment',\n\t\t\t\t\t\tcomment_content: comment_to_save, \n\t\t\t\t\t\tcomment_id: ajax_params.cid, \n\t\t\t\t\t\tpost_id: ajax_params.pid, \n\t\t\t\t\t\tnonce: ajax_params._wpnonce\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t* JSFilter: sce.comment.save.data\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered before a comment is saved\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param object $ajax_save_params\n\t\t\t\t\t*/\n\t\t\t\t\tajax_save_params = wp.hooks.applyFilters( 'sce.comment.save.data', ajax_save_params );\n\t\t\t\t\t\n\t\t\t\t\t$.post( ajax_url, ajax_save_params, function( response ) {\n\t\t\t\t\t\t$( element ).siblings( '.sce-loading' ).fadeOut( 'fast', function() {\n\t\t\t\t\t\t\t$( element ).fadeIn( 'fast', function() {\n\t\t\t\t\t\t\t\tif ( !response.errors ) {\n\t\t\t\t\t\t\t\t\t$( '#sce-comment' + ajax_params.cid ).html( response.comment_text ); //Update comment HTML\n\t\t\t\t\t\t\t\t\tsce.textareas[ ajax_params.cid  ] = $( '#sce-edit-comment' + ajax_params.cid  + ' textarea' ).val(); //Update textarea placeholder\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t* Event: sce.comment.save\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* Event triggered after a comment is saved\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* @since 1.4.0\n\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t* @param int $comment_id The Comment ID\n\t\t\t\t\t\t\t\t\t* @param int $post_id The Post ID\n\t\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\t\tjQuery( 'body' ).triggerHandler( 'sce.comment.save', [ ajax_params.cid, ajax_params.pid ] );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//Output error, maybe kill interface\n\t\t\t\t\t\t\t\t\tif ( response.remove == true ) {\n\t\t\t\t\t\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\t\n\t\t\t\t\t\t\t\t\t\t$( element ).off();\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t//Remove elements\n\t\t\t\t\t\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$( '#sce-edit-comment-status' + ajax_params.cid ).removeClass().addClass( 'sce-status error' ).html( response.error ).show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\t\n\t\t\t\t\t}, 'json' );\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\t\t\t\n\t\t\t//Load timers\n\t\t\t/*\n\t\t\t1.  Use Ajax to get the amount of time left to edit the comment.\n\t\t\t2.  Display the result\n\t\t\t3.  Set Interval\n\t\t\t*/\n\t\t\t$.post( ajax_url, { action: 'sce_get_time_left', comment_id: ajax_params.cid, post_id: ajax_params.pid, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\t//Set initial timer text\n\t\t\t\tvar minutes = parseInt( response.minutes );\n\t\t\t\tvar seconds = parseInt( response.seconds );\n\t\t\t\tvar timer_text = sce.get_timer_text( minutes, seconds );\n\t\t\t\t\n\t\t\t\t//Determine via JS if a user can edit a comment - Note that if someone were to finnagle with this, there is still a server side check when saving the comment\n\t\t\t\tvar can_edit = response.can_edit;\n\t\t\t\tif ( !can_edit ) {\n\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\t\n\t\t\t\t\t$( element ).off();\n\t\t\t\t\t\t\n\t\t\t\t\t//Remove elements\n\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Update the timer and show the editing interface\n\t\t\t\t$( element ).find( '.sce-timer' ).html( timer_text );\n\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( '.sce-timer' ).html( timer_text );\n\t\t\t\t$( element ).show( 400, function() {\n\t\t\t\t\t/**\n\t\t\t\t\t* Event: sce.timer.loaded\n\t\t\t\t\t*\n\t\t\t\t\t* Event triggered after a commen's timer has been loaded\n\t\t\t\t\t*\n\t\t\t\t\t* @since 1.3.0\n\t\t\t\t\t*\n\t\t\t\t\t* @param jQuery Element of the comment\n\t\t\t\t\t*/\n\t\t\t\t\t$( element ).trigger( 'sce.timer.loaded', element );\n\t\t\t\t} );\n\t\t\t\t\n\t\t\t\t//Save state in textarea\n\t\t\t\tsce.textareas[ response.comment_id ] = $( '#sce-edit-comment' + response.comment_id + ' textarea' ).val();\n\t\t\t\t\n\t\t\t\t//Set interval\n\t\t\t\tsce.timers[ response.comment_id ] = {\n\t\t\t\t\tminutes: minutes,\n\t\t\t\t\tseconds: seconds,\n\t\t\t\t\tstart: new Date().getTime(),\n\t\t\t\t\ttime: 0,\n\t\t\t\t\ttimer: function() {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttimer_seconds = sce.timers[ response.comment_id ].seconds - 1;\n\t\t\t\t\t\ttimer_minutes = sce.timers[ response.comment_id ].minutes;\n\t\t\t\t\t\tif ( timer_minutes <=0 && timer_seconds <= 0) { \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//Remove event handlers\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).off();\t\n\t\t\t\t\t\t\t$( element ).off();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//Remove elements\n\t\t\t\t\t\t\t$( element ).parent().remove();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ( timer_seconds < 0 ) { \n\t\t\t\t\t\t\t\ttimer_minutes -= 1; timer_seconds = 59;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar timer_text = sce.get_timer_text( timer_minutes, timer_seconds );\n\t\t\t\t\t\t\t$( element ).find( '.sce-timer' ).html(  timer_text );\n\t\t\t\t\t\t\t$( element ).siblings( '.sce-textarea' ).find( '.sce-timer' ).html( timer_text );\n\t\t\t\t\t\t\tsce.timers[ response.comment_id ].seconds = timer_seconds;\n\t\t\t\t\t\t\tsce.timers[ response.comment_id ].minutes = timer_minutes;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//Get accurate time\n\t\t\t\t\t\tvar timer_obj = sce.timers[ response.comment_id ];\n\t\t\t\t\t\ttimer_obj.time += 1000;\n\t\t\t\t\t\tvar diff = ( new Date().getTime() - timer_obj.start ) - timer_obj.time;\n\t\t\t\t\t\twindow.setTimeout( timer_obj.timer, ( 1000 - diff ) );\n\t\t\t\t\t} \n\t\t\t\t};\n\t\t\t\twindow.setTimeout( sce.timers[ response.comment_id ].timer, 1000 );\n\t\t\t\t\n\t\t\t\t\n\t\t\t}, 'json' );\n\t\t} );\n\t};\n\tsce.get_timer_text = function( minutes, seconds ) {\n\t\tif (seconds < 0) { minutes -= 1; seconds = 59; }\n\t\t//Create timer text\n\t\tvar text = '';\n\t\tif (minutes >= 1) {\n\t\t\ttext += minutes + \" \" + _n('Minute', 'Minutes', minutes, 'simple-comment-editing');\n\t\t\tif ( seconds > 0 ) { \n\t\t\t\ttext += \" \" + __('and', 'simple-comment-editing') + \" \"; \n\t\t\t}\n\t\t}\n\t\tif (seconds > 0) {\n\t\t\ttext += seconds + \" \" + _n('Second', 'Seconds', seconds, 'simple-comment-editing'); \n\t\t}\n\t\t/**\n\t\t* JSFilter: sce.comment.timer.text\n\t\t*\n\t\t* Filter triggered before a timer is returned\n\t\t*\n\t\t* @since 1.4.0\n\t\t*\n\t\t* @param object $ajax_save_params\n\t\t*/\n\t\ttext = wp.hooks.applyFilters( 'sce.comment.timer.text', text,  _n('Minute', 'Minutes', minutes, 'simple-comment-editing'), _n('Second', 'Seconds', seconds, 'simple-comment-editing') );\n\t\treturn text;\n\t};\n\tsce.set_comment_cookie = function( pid, cid, callback ) {\n\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_get_cookie_var', post_id: pid, comment_id: cid, _ajax_nonce: simple_comment_editing.nonce\t }, function( response ) {\n\t\t\tvar date = new Date( response.expires );\n\t\t\tdate = date.toGMTString();\n\t\t\tdocument.cookie = response.name+\"=\"+response.value+ \"; expires=\" + date+\"; path=\" + response.path;\n\t\t\t\t\n\t\t\tif ( typeof callback == \"function\" ) {\n\t\t\t\tcallback( cid );\t\n\t\t\t}\n\t\t\t\n\t\t}, 'json' );\n\t};\n\t\n\tsce.timers = new Array();\n\tsce.textareas = new Array();\n\t$( '.sce-edit-button' ).simplecommentediting();\n\t\n\t$( '.sce-edit-button' ).on( 'sce.timer.loaded', SCE_comment_scroll );\n\t\n\t//Third-party plugin compatibility\n\t$( 'body' ).on( 'comment.posted', function( event, post_id, comment_id ) {\n\t\tsce.set_comment_cookie( post_id, comment_id, function( comment_id ) {\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t/**\n\t\t\t\t* Event: sce.comment.loaded\n\t\t\t\t*\n\t\t\t\t* Event triggered after SCE has loaded a comment.\n\t\t\t\t*\n\t\t\t\t* @since 1.3.0\n\t\t\t\t*\n\t\t\t\t* @param object Comment Object\n\t\t\t\t*/\n\t\t\t\t$( 'body' ).trigger( 'sce.comment.loaded', [ response ] );\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\tOnce you capture the sce.comment.loaded event, you can replace the comment and enable SCE\n\t\t\t\t$( '#comment-' + comment_id ).replaceWith( comment_html );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t}, 'json' );\t\n\t\t} );\n\t} );\n\t\n\t//EPOCH Compability\n\t$( 'body' ).on( 'epoch.comment.posted', function( event, pid, cid ) {\n    \tif ( typeof pid == 'undefined' ) {\n\t    \treturn;\n    \t}\n\t\t//Ajax call to set SCE cookie\n\t\tsce.set_comment_cookie( pid, cid, function( comment_id ) {\n\t\t\t//Ajax call to get new comment and load it\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_epoch_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\tcomment = Epoch.parse_comment( response );\n\t\t\t\t$( '#comment-' + comment_id ).replaceWith( comment );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t}, 'json' );\t\n\t\t} );\n\t} );\n\t$( 'body' ).on( 'epoch.comments.loaded, epoch.two.comments.loaded', function( e ) {\n\t\tsetTimeout( function() {\n\t\t\t$( '.sce-edit-button' ).simplecommentediting();\n\t\t}, 1000 );\n\t} );\n\t$( 'body' ).on( 'epoch.two.comment.posted', function( event ) {\n    \t//Ajax call to set SCE cookie\n    \tcomment_id = event.comment_id;\n\t\tsce.set_comment_cookie( event.post, comment_id, function( comment_id ) {\n\t\t\t//Ajax call to get new comment and load it\n\t\t\t$.post( simple_comment_editing.ajax_url, { action: 'sce_epoch2_get_comment', comment_id: comment_id, _ajax_nonce: simple_comment_editing.nonce }, function( response ) {\n\t\t\t\t$( '#comment-' + comment_id ).find( 'p' ).parent().html( response );\n\t\t\t\t$( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\t\t} );\t\n\t\t} );\n\t} );\n} );\n\nfunction SCE_comment_scroll( e, element ) {\n\tvar location = \"\" + window.location;\n\tvar pattern = /(#[^-]*\\-[^&]*)/;\n\tif ( pattern.test( location ) ) {\n\t\tlocation = jQuery( \"\" + window.location.hash );\n\t\tif ( location.length > 0 ) {\n\t\t\tvar targetOffset = location.offset().top;\n\t\t\tjQuery( 'html,body' ).animate( {scrollTop: targetOffset}, 1 );\n\t\t}\n\t}\t\n}\n//Callback when comments have been updated (for wp-ajaxify-comments compatibility) - http://wordpress.org/plugins/wp-ajaxify-comments/faq/\nfunction SCE_comments_updated( comment_url ) {\n\tvar match = comment_url.match(/#comment-(\\d+)/)\n\tif ( !match ) {\n\t\treturn;\n\t}\n\tcomment_id = match[ 1 ];\n\tjQuery( '#comment-' + comment_id ).find( '.sce-edit-button' ).simplecommentediting();\n\t\n};"]}