{"version":3,"sources":["event-manager.js"],"names":["window","undefined","EventManager","wp","hooks","_removeHook","type","hook","callback","context","handlers","handler","i","STORAGE","length","splice","_addHook","priority","hookObject","_hookInsertSort","tmpHook","j","prevHook","len","_runHook","args","apply","slice","Array","prototype","MethodsAvailable","removeFilter","applyFilters","filter","addFilter","call","arguments","shift","parseInt","removeAction","action","doAction","addAction","actions","filters"],"mappings":"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","file":"event-manager.min.js","sourcesContent":["( function( window, undefined ) {\n\t'use strict';\n\n\t/**\n\t * Handles managing all events for whatever you plug it into. Priorities for hooks are based on lowest to highest in\n\t * that, lowest priority hooks are fired first.\n\t */\n\tvar EventManager = function() {\n\t\tvar slice = Array.prototype.slice;\n\t\t\n\t\t/**\n\t\t * Maintain a reference to the object scope so our public methods never get confusing.\n\t\t */\n\t\tvar MethodsAvailable = {\n\t\t\tremoveFilter : removeFilter,\n\t\t\tapplyFilters : applyFilters,\n\t\t\taddFilter : addFilter,\n\t\t\tremoveAction : removeAction,\n\t\t\tdoAction : doAction,\n\t\t\taddAction : addAction\n\t\t};\n\n\t\t/**\n\t\t * Contains the hooks that get registered with this EventManager. The array for storage utilizes a \"flat\"\n\t\t * object literal such that looking up the hook utilizes the native object literal hash.\n\t\t */\n\t\tvar STORAGE = {\n\t\t\tactions : {},\n\t\t\tfilters : {}\n\t\t};\n\n\t\t/**\n\t\t * Adds an action to the event manager.\n\t\t *\n\t\t * @param action Must contain namespace.identifier\n\t\t * @param callback Must be a valid callback function before this action is added\n\t\t * @param [priority=10] Used to control when the function is executed in relation to other callbacks bound to the same hook\n\t\t * @param [context] Supply a value to be used for this\n\t\t */\n\t\tfunction addAction( action, callback, priority, context ) {\n\t\t\tif( typeof action === 'string' && typeof callback === 'function' ) {\n\t\t\t\tpriority = parseInt( ( priority || 10 ), 10 );\n\t\t\t\t_addHook( 'actions', action, callback, priority, context );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Performs an action if it exists. You can pass as many arguments as you want to this function; the only rule is\n\t\t * that the first argument must always be the action.\n\t\t */\n\t\tfunction doAction( /* action, arg1, arg2, ... */ ) {\n\t\t\tvar args = slice.call( arguments );\n\t\t\tvar action = args.shift();\n\n\t\t\tif( typeof action === 'string' ) {\n\t\t\t\t_runHook( 'actions', action, args );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Removes the specified action if it contains a namespace.identifier & exists.\n\t\t *\n\t\t * @param action The action to remove\n\t\t * @param [callback] Callback function to remove\n\t\t */\n\t\tfunction removeAction( action, callback ) {\n\t\t\tif( typeof action === 'string' ) {\n\t\t\t\t_removeHook( 'actions', action, callback );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Adds a filter to the event manager.\n\t\t *\n\t\t * @param filter Must contain namespace.identifier\n\t\t * @param callback Must be a valid callback function before this action is added\n\t\t * @param [priority=10] Used to control when the function is executed in relation to other callbacks bound to the same hook\n\t\t * @param [context] Supply a value to be used for this\n\t\t */\n\t\tfunction addFilter( filter, callback, priority, context ) {\n\t\t\tif( typeof filter === 'string' && typeof callback === 'function' ) {\n\t\t\t\tpriority = parseInt( ( priority || 10 ), 10 );\n\t\t\t\t_addHook( 'filters', filter, callback, priority, context );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Performs a filter if it exists. You should only ever pass 1 argument to be filtered. The only rule is that\n\t\t * the first argument must always be the filter.\n\t\t */\n\t\tfunction applyFilters( /* filter, filtered arg, arg2, ... */ ) {\n\t\t\tvar args = slice.call( arguments );\n\t\t\tvar filter = args.shift();\n\n\t\t\tif( typeof filter === 'string' ) {\n\t\t\t\treturn _runHook( 'filters', filter, args );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Removes the specified filter if it contains a namespace.identifier & exists.\n\t\t *\n\t\t * @param filter The action to remove\n\t\t * @param [callback] Callback function to remove\n\t\t */\n\t\tfunction removeFilter( filter, callback ) {\n\t\t\tif( typeof filter === 'string') {\n\t\t\t\t_removeHook( 'filters', filter, callback );\n\t\t\t}\n\n\t\t\treturn MethodsAvailable;\n\t\t}\n\n\t\t/**\n\t\t * Removes the specified hook by resetting the value of it.\n\t\t *\n\t\t * @param type Type of hook, either 'actions' or 'filters'\n\t\t * @param hook The hook (namespace.identifier) to remove\n\t\t * @private\n\t\t */\n\t\tfunction _removeHook( type, hook, callback, context ) {\n\t\t\tvar handlers, handler, i;\n\t\t\t\n\t\t\tif ( !STORAGE[ type ][ hook ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( !callback ) {\n\t\t\t\tSTORAGE[ type ][ hook ] = [];\n\t\t\t} else {\n\t\t\t\thandlers = STORAGE[ type ][ hook ];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\tfor ( i = handlers.length; i--; ) {\n\t\t\t\t\t\tif ( handlers[i].callback === callback ) {\n\t\t\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i = handlers.length; i--; ) {\n\t\t\t\t\t\thandler = handlers[i];\n\t\t\t\t\t\tif ( handler.callback === callback && handler.context === context) {\n\t\t\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Adds the hook to the appropriate storage container\n\t\t *\n\t\t * @param type 'actions' or 'filters'\n\t\t * @param hook The hook (namespace.identifier) to add to our event manager\n\t\t * @param callback The function that will be called when the hook is executed.\n\t\t * @param priority The priority of this hook. Must be an integer.\n\t\t * @param [context] A value to be used for this\n\t\t * @private\n\t\t */\n\t\tfunction _addHook( type, hook, callback, priority, context ) {\n\t\t\tvar hookObject = {\n\t\t\t\tcallback : callback,\n\t\t\t\tpriority : priority,\n\t\t\t\tcontext : context\n\t\t\t};\n\n\t\t\t// Utilize 'prop itself' : http://jsperf.com/hasownproperty-vs-in-vs-undefined/19\n\t\t\tvar hooks = STORAGE[ type ][ hook ];\n\t\t\tif( hooks ) {\n\t\t\t\thooks.push( hookObject );\n\t\t\t\thooks = _hookInsertSort( hooks );\n\t\t\t}\n\t\t\telse {\n\t\t\t\thooks = [ hookObject ];\n\t\t\t}\n\n\t\t\tSTORAGE[ type ][ hook ] = hooks;\n\t\t}\n\n\t\t/**\n\t\t * Use an insert sort for keeping our hooks organized based on priority. This function is ridiculously faster\n\t\t * than bubble sort, etc: http://jsperf.com/javascript-sort\n\t\t *\n\t\t * @param hooks The custom array containing all of the appropriate hooks to perform an insert sort on.\n\t\t * @private\n\t\t */\n\t\tfunction _hookInsertSort( hooks ) {\n\t\t\tvar tmpHook, j, prevHook;\n\t\t\tfor( var i = 1, len = hooks.length; i < len; i++ ) {\n\t\t\t\ttmpHook = hooks[ i ];\n\t\t\t\tj = i;\n\t\t\t\twhile( ( prevHook = hooks[ j - 1 ] ) &&  prevHook.priority > tmpHook.priority ) {\n\t\t\t\t\thooks[ j ] = hooks[ j - 1 ];\n\t\t\t\t\t--j;\n\t\t\t\t}\n\t\t\t\thooks[ j ] = tmpHook;\n\t\t\t}\n\n\t\t\treturn hooks;\n\t\t}\n\n\t\t/**\n\t\t * Runs the specified hook. If it is an action, the value is not modified but if it is a filter, it is.\n\t\t *\n\t\t * @param type 'actions' or 'filters'\n\t\t * @param hook The hook ( namespace.identifier ) to be ran.\n\t\t * @param args Arguments to pass to the action/filter. If it's a filter, args is actually a single parameter.\n\t\t * @private\n\t\t */\n\t\tfunction _runHook( type, hook, args ) {\n\t\t\tvar handlers = STORAGE[ type ][ hook ], i, len;\n\t\t\t\n\t\t\tif ( !handlers ) {\n\t\t\t\treturn (type === 'filters') ? args[0] : false;\n\t\t\t}\n\n\t\t\tlen = handlers.length;\n\t\t\tif ( type === 'filters' ) {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\targs[ 0 ] = handlers[ i ].callback.apply( handlers[ i ].context, args );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\thandlers[ i ].callback.apply( handlers[ i ].context, args );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ( type === 'filters' ) ? args[ 0 ] : true;\n\t\t}\n\n\t\t// return all of the publicly available methods\n\t\treturn MethodsAvailable;\n\n\t};\n\t\n\twindow.wp = window.wp || {};\n\twindow.wp.hooks = new EventManager();\n\n} )( window );"]}